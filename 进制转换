//链接：https://www.nowcoder.com/questionTerminal/ac61207721a34b74b06597fe6eb67c52
//来源：牛客网

//给定一个十进制数M，以及需要转换的进制数N。将十进制数M转化为N进制数 
//输入描述:
//输入为一行，M(32位整数)、N(2 ≤ N ≤ 16)，以空格隔开。


//输出描述:
//为每个测试实例输出转换后的数，每个输出占一行。如果N大于9，则对应的数字规则参考16进制（比如，10用A表示，等等）
#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <string>
#include<array>
#include<forward_list>
#include <algorithm>
using namespace std;
vector<char> radixChange(int num, int radix)
{
	vector<char> r;
	vector<char> table = { '0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F' };
	int residu;//余数
	int result=num;//被除的结果
	while (result >= radix)
	{
		residu = result%radix;
		result = result / radix;
		r.push_back(table[residu]);
	}
	r.push_back(table[result]);
	return r;
}
int main()
{
	vector<char> r;
     int m,n;
    cin>>m>>n;
     if(m<0)
     {
         cout<<'-';
         m=-m;
     }  
	r=radixChange(m,n);
   
	while (!r.empty())
	{
		cout << r.back();
		r.pop_back();
	}
	cout << endl;
	return 0;
}
