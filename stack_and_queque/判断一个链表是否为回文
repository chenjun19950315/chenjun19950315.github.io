//题目: 给定一个链表的头节点head，请判断该链表是否为回文结构。 例如： 1->2->1，返回true。 1->2->2->1，返回true。
//15->6->15，返回true。 1->2->3，返回false。
//思路一:只需要用一个栈,保存链表中所有的元素，并比较即可
bool isPalindrome1(LinkList head1)
{
	LinkList p = head1;
	stack<char> s;
	while (p->next != nullptr)
	{
		p = p->next;
		s.push(p->data);
	}
	p = head1->next;
	while (!s.empty())
	{

		if (s.top() != p->data)
			return false;
		s.pop();
		p = p->next;
	}
	return true;
}
int main()
{
	LinkList head1 = new Node;
	
	
	InitList(head1);
	
	CreateFromTail(head1);
	DisplayList(head1);
	
	cout << isPalindrome1(head1) << endl;

	return 0;
}
