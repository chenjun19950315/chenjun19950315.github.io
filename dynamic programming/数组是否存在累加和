//给你一个数组arr，和一个整数aim。如果可以任意选择arr中的数字，能不能累加得到aim，返回true或者false
//暴力出所有结果，最后判断最终的结果中是否有与aim相等的数
bool isSum(const vector<int>& arr, int pos, int sum, int aim)
{
	if (pos == arr.size() ) //注意不是size-1. 
		return aim == sum;
	return isSum(arr, pos + 1, sum, aim) || isSum(arr, pos + 1, sum + arr[pos], aim);
}
int main()
{
	vector<int> arr = { 3,18,1,4};
	cout << isSum(arr,0,0,23) << endl;
	return 0;
}
